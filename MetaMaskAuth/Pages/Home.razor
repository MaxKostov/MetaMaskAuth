@page "/"
@using MetaMaskAuth.Services

@inject MetaMaskService MetaMaskService
@inject HttpClient Http


<h3>Sign in with MetaMask</h3>

<button @onclick="SignIn">Sign in with MetaMask</button>

@code {
    private async Task SignIn()
    {
        try
        {
            var account = await MetaMaskService.RequestAccountAsync();
            var message = "Sign this message to authenticate.";
            var signature = await MetaMaskService.SignMessageAsync(message);

            // Отправляем подпись на сервер для проверки
            await AuthenticateOnServer(account, signature, message);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private async Task AuthenticateOnServer(string account, string signature, string message)
    {
        var authRequest = new AuthRequest
            {
                Account = account,
                Signature = signature,
                Message = message
            };

        var response = await Http.PostAsJsonAsync("https://localhost:5001/api/auth/verify", authRequest);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<AuthResponse>();
            if (result?.Success == true)
            {
                Console.WriteLine("Authentication successful!");
            }
            else
            {
                Console.WriteLine("Authentication failed.");
            }
        }
        else
        {
            Console.WriteLine("Server error: " + response.StatusCode);
        }
    }

    public class AuthRequest
    {
        public string Account { get; set; }
        public string Signature { get; set; }
        public string Message { get; set; }
    }

    public class AuthResponse
    {
        public bool Success { get; set; }
    }
}
